"use strict";(self.webpackChunkaxios_doc=self.webpackChunkaxios_doc||[]).push([[654],{767:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-2a35fb69",path:"/guide/POSTRequests.html",title:"POST Requests",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"guide/POSTRequests.md",git:{updatedTime:1642934496e3,contributors:[{name:"xiaoxunyao",email:"huchengyea@163.com",commits:2}]}}},481:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(252).uE)('<h1 id="post-requests" tabindex="-1"><a class="header-anchor" href="#post-requests" aria-hidden="true">#</a> POST Requests</h1><p><em>How to perform POST requests with Axios</em></p><p><strong>Performing a <code>POST</code> request</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Axios</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>\n\t<span class="token string">&quot;/user&quot;</span><span class="token punctuation">,</span>\n\t<span class="token keyword">new</span> <span class="token class-name">Body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fred&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;lastName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Flintstone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',4),p={},e=(0,a(744).Z)(p,[["render",function(n,s){return t}]])},744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);