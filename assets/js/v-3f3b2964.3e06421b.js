"use strict";(self.webpackChunkaxios_doc=self.webpackChunkaxios_doc||[]).push([[806],{353:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-3f3b2964",path:"/guide/MinimalExample.html",title:"Minimal Example",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Example",slug:"example",children:[]}],filePathRelative:"guide/MinimalExample.md",git:{updatedTime:1642934488e3,contributors:[{name:"xiaoxunyao",email:"huchengyea@163.com",commits:2}]}}},350:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(252).uE)('<h1 id="minimal-example" tabindex="-1"><a class="header-anchor" href="#minimal-example" aria-hidden="true">#</a> Minimal Example</h1><p><em>A little example of using Axios</em></p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p><em>Performing a <code>GET</code> request</em></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Make a request for a user with a given ID</span>\n<span class="token class-name">Axios</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>\n\t<span class="token string">&quot;/user?ID=12345&quot;</span> \n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Optionally the request above could also be done as</span>\n<span class="token class-name">Axios</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>\n\t<span class="token string">&quot;/user&quot;</span><span class="token punctuation">,</span>\n\t<span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span> \n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">-&gt;</span><span class="token punctuation">{</span>\n\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',5),e={},p=(0,a(744).Z)(e,[["render",function(n,s){return t}]])},744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);